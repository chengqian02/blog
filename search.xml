<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Centos7.2下搭建FTP服务器</title>
    <url>/2019/03/01/Linux.FTP%20server/</url>
    <content><![CDATA[<p>FTP服务器（File Transfer Protocol Server）是在互联网上提供文件存储和访问服务的计算机，它们依照FTP协议提供服务。 FTP是File Transfer Protocol(文件传输协议)。顾名思义，就是专门用来传输文件的协议。简单地说，支持FTP协议的服务器就是FTP服务器。</p>
<a id="more"></a>
<p style: size:50px;><b>Centos7.2下搭建FTP服务器</b></p>

<p>在搭建服务器之前检查yum源，或者连通网络设置一些正规的源</p>

<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="安装ftp-使用yum"><a href="#安装ftp-使用yum" class="headerlink" title="安装ftp-使用yum"></a>安装ftp-使用yum</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y vsftpd</span><br></pre></td></tr></table></figure>

<h3 id="启动ftp服务-默认为21端口"><a href="#启动ftp服务-默认为21端口" class="headerlink" title="启动ftp服务-默认为21端口"></a>启动ftp服务-默认为21端口</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start vsftpd</span><br></pre></td></tr></table></figure>
<h3 id="查看端口是否占用"><a href="#查看端口是否占用" class="headerlink" title="查看端口是否占用"></a>查看端口是否占用</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -nltp | grep 21</span><br></pre></td></tr></table></figure>

<h2 id="匿名访问"><a href="#匿名访问" class="headerlink" title="匿名访问"></a>匿名访问</h2><p>以上内容没问题后，访问ftp://xxx.xxx.xxx.xxx即可</p>

<h2 id="本地用户登录"><a href="#本地用户登录" class="headerlink" title="本地用户登录"></a>本地用户登录</h2><h3 id="配置FTP-权限"><a href="#配置FTP-权限" class="headerlink" title="配置FTP 权限"></a>配置FTP 权限</h3><p>&emsp;了解 VSFTP 配置,vsftpd 的配置目录为 /etc/vsftpd，包含下列的配置文件：<br>&emsp;&emsp;vsftpd.conf 为主要配置文件<br>&emsp;&emsp;ftpusers 配置禁止访问 FTP 服务器的用户列表<br>&emsp;&emsp;user_list 配置用户访问控制</p>
<h3 id="阻止匿名访问和切换根目录"><a href="#阻止匿名访问和切换根目录" class="headerlink" title="阻止匿名访问和切换根目录"></a>阻止匿名访问和切换根目录</h3><p>&emsp;编辑 /etc/vsftpd/vsftpd.conf，找到下面两处配置并修改：<br>&emsp;# 禁用匿名用户<br>&emsp;anonymous_enable=NO<br>&emsp;# 禁止切换根目录<br>&emsp;chroot_local_user=YES</p>
<h3 id="重启FTP服务"><a href="#重启FTP服务" class="headerlink" title="重启FTP服务"></a>重启FTP服务</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart vsftp</span><br></pre></td></tr></table></figure>

<h3 id="创建-FTP-用户"><a href="#创建-FTP-用户" class="headerlink" title="创建 FTP 用户"></a>创建 FTP 用户</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 创建用户ftpuser</span><br><span class="line">useradd ftpuser</span><br><span class="line">// 为用户设置密码</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"ftppassword"</span> | passwd ftpuser --stdin</span><br></pre></td></tr></table></figure>

<h3 id="限制该用户仅能通过-FTP-访问"><a href="#限制该用户仅能通过-FTP-访问" class="headerlink" title="限制该用户仅能通过 FTP 访问"></a>限制该用户仅能通过 FTP 访问</h3><p>&emsp; 限制用户 ftpuser 只能通过 FTP 访问服务器，而不能直接登录服务器：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">usermod -s /sbin/nologin ftpuser</span><br></pre></td></tr></table></figure>
<h3 id="为用户分配主目录"><a href="#为用户分配主目录" class="headerlink" title="为用户分配主目录"></a>为用户分配主目录</h3><p>&emsp; 为用户 ftpuser 创建主目录并约定：<br>&emsp;&emsp; /data/ftp 为主目录, 该目录不可上传文件<br>&emsp;&emsp; /data/ftp/pub 文件只能上传到该目录下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /data/ftp/pub</span><br><span class="line">// 创建登录欢迎文件</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Welcome to use FTP service."</span> &gt; /data/ftp/welcome.txt</span><br><span class="line">// 设置访问权限</span><br><span class="line">chmod a-w /data/ftp &amp;&amp; chmod 777 -R /data/ftp/pub</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp; 设置为用户的主目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">usermod -d /data/ftp ftpuser</span><br></pre></td></tr></table></figure>


<h2 id="虚拟用户登录"><a href="#虚拟用户登录" class="headerlink" title="虚拟用户登录"></a>虚拟用户登录</h2><h3 id="添加虚拟用户口令文件"><a href="#添加虚拟用户口令文件" class="headerlink" title="添加虚拟用户口令文件"></a>添加虚拟用户口令文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/vsftpd/vftpuser.txt</span><br></pre></td></tr></table></figure>
<p>添加虚拟用户名和密码，一行用户名，一行密码，以此类推。奇数行为用户名，偶数行为密码。<br>&emsp;bobyuan     // 用户名<br>&emsp;123456      // 密码<br>&emsp;markwang    //用户名<br>&emsp;123456      //密码</p>
<h3 id="生成虚拟用户口令认证文件"><a href="#生成虚拟用户口令认证文件" class="headerlink" title="生成虚拟用户口令认证文件"></a>生成虚拟用户口令认证文件</h3><p>&emsp;将刚添加的vftpuser.txt虚拟用户口令文件转换成系统识别的口令认证文件。首先查看系统有没有安装生成口令认证文件所需的软件db4-utils。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -qa |grep db4-utils</span><br></pre></td></tr></table></figure>
<p>如果没有则需要单独安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -ivh db4-utils-4.3.29-9.fc6.i386.rpm</span><br></pre></td></tr></table></figure>
<p>下面使用db_load命令生成虚拟用户口令认证文件。
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">db_load -T -t <span class="built_in">hash</span> -f /etc/vsftpd/vftpuser.txt/etc/vsftpd/vftpuser.db</span><br></pre></td></tr></table></figure>

<h3 id="编辑vsftpd的PAM认证文件"><a href="#编辑vsftpd的PAM认证文件" class="headerlink" title="编辑vsftpd的PAM认证文件"></a>编辑vsftpd的PAM认证文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/pam.d/vsftpd</span><br></pre></td></tr></table></figure>
<p>将里面其他的都注释掉，添加下面这两行：<br>&emsp;&emsp;auth required /lib/security/pam_userdb.so db=/etc/vsftpd/vftpuser<br>&emsp;&emsp;account required /lib/security/pam_userdb.so db=/etc/vsftpd/vftpuser</p>
<p>注:64位系统需使用下面的两行<br>&emsp;&emsp;auth required /lib64/security/pam_userdb.so db=/etc/vsftpd/vftpuser<br>&emsp;&emsp;account required /lib64/security/pam_userdb.so db=/etc/vsftpd/vftpuser</p>
<h3 id="配置vsftpd-conf（设置虚拟用户配置项）"><a href="#配置vsftpd-conf（设置虚拟用户配置项）" class="headerlink" title="配置vsftpd.conf（设置虚拟用户配置项）"></a>配置vsftpd.conf（设置虚拟用户配置项）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/vsftpd/vsftpd.conf</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;anonymous_enable=NO #关闭匿名用户【该项已存在,需修改】<br>&emsp;&emsp;guest_enable=YES #开启虚拟用户<br>&emsp;&emsp;guest_username=vftpuser #FTP虚拟用户对应的系统用户<br>&emsp;&emsp;pam_service_name=vsftpd #PAM认证文件<br>&emsp;&emsp;user_config_dir=/etc/vsftpd/vsftpd_config_dir #用户配置文件的目录</p>
<h3 id="编辑用户配置文件"><a href="#编辑用户配置文件" class="headerlink" title="编辑用户配置文件"></a>编辑用户配置文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/vsftpd/vsftpd_config_dir/user1</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;local_root=/data/ftproot/user1 #【该用户的主目录】<br>&emsp;&emsp;anon_world_readable_only=NO #【下载权限】<br>&emsp;&emsp;anon_upload_enable=YES #【上传权限】<br>&emsp;&emsp;anon_mkdir_write_enable=YES #【创建目录的权限】<br>&emsp;&emsp;anon_other_write_enable=NO #【删除和重命名的权限】</p>
<h3 id="7、启动vsftpd"><a href="#7、启动vsftpd" class="headerlink" title="7、启动vsftpd"></a>7、启动vsftpd</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/init.d/vsftpd start</span><br></pre></td></tr></table></figure>
<h3 id="8、检查"><a href="#8、检查" class="headerlink" title="8、检查"></a>8、检查</h3><p>ftp 127.0.0.1<br>输入用户名密码登录,然后使用put命令上传文件<br>put a.txt<br>dir检查文件上传成功即可.</p>
]]></content>
      <tags>
        <tag>服务器</tag>
        <tag>Linux</tag>
        <tag>Centos</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo+github_page搭建博客</title>
    <url>/2018/10/13/hexo+github/</url>
    <content><![CDATA[<p>Hexo 是一个快速、简洁且高效的博客框架，可托管于github pages，可免去维护服务器的麻烦，博主们可更专注于内容的创作。</p>
<a id="more"></a>
<p style: size:50px;><b>使用Hexo+github搭建属于自己的博客</b></p>

<p>搭建步骤：</p>

<h2 id="根据”Hexo官网“步骤安装git-node-js"><a href="#根据”Hexo官网“步骤安装git-node-js" class="headerlink" title="根据”Hexo官网“步骤安装git,node.js"></a>根据”<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官网</a>“步骤安装git,node.js</h2><p color: red;>注意：在安装"node.js"软件时勾选Add to PATH选项</p>

<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>执行下列命令安装hexo：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>安装 Hexo 完成后，选择一个博客的主目录，然后执行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line"><span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>


<p>新建完成之后该目录的目录结构如下:<br>&emsp;&emsp;_config.yml     # 网站的 配置 信息<br>&emsp;&emsp;package.json          # 应用程序的信息<br>&emsp;&emsp;scaffolds             # 模板文件夹<br>&emsp;&emsp;source                # 博文源文件目录<br>&emsp;&emsp;_drafts               # 草稿文件夹<br>&emsp;&emsp;_posts                # 博文文件夹<br>&emsp;&emsp;themes                # 主题文件夹</p>
<p>&emsp;再执行以下命令，访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 即可快速体验Hexo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p><img src="http://pgnfycdbr.bkt.clouddn.com/static/images/git+githubpage_hexo.png" alt="hexo"></p>
<h2 id="根据-Hexo文档-对网站做一些简单的配置，然后修改主题为next。更多主题可到”hexo主题网站查看“。"><a href="#根据-Hexo文档-对网站做一些简单的配置，然后修改主题为next。更多主题可到”hexo主题网站查看“。" class="headerlink" title="根据 Hexo文档 对网站做一些简单的配置，然后修改主题为next。更多主题可到”hexo主题网站查看“。"></a>根据 Hexo文档 对网站做一些简单的配置，然后修改主题为next。更多主题可到”<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo主题网站查看</a>“。</h2><p>&emsp;安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> your-hexo-site</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<p>&emsp;修改hexo根目录的_config.yml中的theme参数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;然后执行 hexo clean &amp; hexo g &amp; hexo s 命令即可看到效果</p>
<p>&emsp;&emsp;更多的主题配置可见 <a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">next官网</a></p>
<h2 id="配置-github-pages"><a href="#配置-github-pages" class="headerlink" title="配置 github pages"></a>配置 github pages</h2><p>&emsp;&emsp;在配置github pages页面之前需要到<a href="www.github.com">GitHub官网</a>注册一个属于自己的账号。</p>
<p>&emsp;&emsp;然后到github上创建一个新的空仓库，名字格式为 账户名.github.io，譬如我的github账户名是 c-liberty，所以我的github pages 仓库的名字应为 c-liberty.github.io</p>
<p>安装插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;然后配置 Hexo根目录的 _config.yml，xxx为你的用户名，注意还需要加入你的 github 用户名和密码，不然后面推送失败（但是上传代码时注意防止密码泄露）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    <span class="built_in">type</span>: git</span><br><span class="line">	repository: git@github.com:xxx/xxx.github.io.git</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;如果你是第一次配置 github 远程仓库，你还须将你电脑的ssh key 配置到 github 上，具体可参考 git远程仓库</p>
<h2 id="配置SSH"><a href="#配置SSH" class="headerlink" title="配置SSH"></a>配置SSH</h2><p>&emsp;&emsp;上传文件需要配置ssh key，不然无法上传。<br>&emsp;&emsp;首先先检查一下本地是否已经存在ssh key,在Git Bash输入以下指令（任意位置点击鼠标右键），检查是否已经存在了SSH keys。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls -al ~/.ssh</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;如果不存在就没有关系，如果存在的话，直接删除.ssh文件夹里面所有文件： </p>
<p><img src="http://pgnfycdbr.bkt.clouddn.com/static/images/git+githubpage_sshcreate.png" alt="ssh.create"></p>
<p>&emsp;&emsp;设置name和emai</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">"&lt;your name&gt;"</span></span><br><span class="line">git config --global user.email <span class="string">"&lt;your email&gt;"</span></span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;需要注意的是这里的name是随意的，邮箱是你的联系邮箱，与github上的邮箱没有什么联系（不过我都是同一个邮箱）。</p>
<p><b>生成ssh 密钥</b></p>
<p>&emsp;&emsp;输入以下指令（邮箱就是你注册Github时候的邮箱）后，回车：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"XXXXX@qq.com"</span></span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;一路按回车键即可，如果设置了密码请记住。<br>&emsp;&emsp;这一步在~/.ssh/下生成了两个文件id_rsa 和 id_rsa.pub</p>
<p><b>获取Key</b></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>

<p>然后拷贝key</p>
<p>&emsp;&emsp;在Github上添加SSH密钥</p>
<p>&emsp;&emsp;在<b><a href="https://github.com/settings/keys" target="_blank" rel="noopener">https://github.com/settings/keys</a>下 add new ssh key</p>
<p><img src="http://pgnfycdbr.bkt.clouddn.com/static/images/git+githubpage_sshconfig.png" alt="ssh"></p>
<p>&emsp;&emsp;然后title随便取个名字，key 就是上面我们拷贝的内容，<br>&emsp;&emsp;好了，最后我们测试一下看是否配置成功。</p>
<p>输入以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh git@github.com</span><br></pre></td></tr></table></figure>

<p>成功的话会显示以下的大致内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">The authenticity of host <span class="string">'github.com (192.30.252.128)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added '</span>github.com,192.30.252.128<span class="string">' (RSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Hi git-xuhao! You'</span>ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class="line">Connection to github.com closed.</span><br></pre></td></tr></table></figure>

<p>推送Hexo到github</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<h2 id="其他的配置"><a href="#其他的配置" class="headerlink" title="其他的配置"></a>其他的配置</h2><p>&emsp;&emsp;更加详细的配置请查看 <a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">next使用手册</a></p>
<p>&emsp;&emsp;使用七牛云图床，参考 使用七牛为Hexo存储图片 和 Hexo七牛同步插件</p>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
