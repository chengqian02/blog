<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>C·liberty.blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-12-17T13:05:41.748Z</updated>
  <id>http://yoursite.com/</id>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Open vSwitch系列二 安装open vSwitch</title>
    <link href="http://yoursite.com/2019/12/17/OpenvSwitch/"/>
    <id>http://yoursite.com/2019/12/17/OpenvSwitch/</id>
    <published>2019-12-16T16:00:00.000Z</published>
    <updated>2019-12-17T13:05:41.748Z</updated>
    
    <content type="html"><![CDATA[<p>在ovs学习过程中，如果自己想要安装一个ovs交换机其实一条简单的命令 apt  install openvswitch 就可以了，但是这种方法只能安装低版本的ovs。在特殊情况下需要安装指定版本，例如需要下发meters表时需要ovs2.8以上的版本，那么就需要下载安装包手动安装。看似一个复杂的过程，其实也是比较简单的。下面就一起来看看如果手动安装一个指定版本ovs交换机。</p><a id="more"></a><p style: size:50px;><b>Open vSwitch系列二 安装open vSwitch</b></p><p>在搭建服务器之前检查yum源，或者连通网络设置一些正规的源</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="安装python"><a href="#安装python" class="headerlink" title="安装python"></a>安装python</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install python</span><br></pre></td></tr></table></figure><h3 id="安装python-pip"><a href="#安装python-pip" class="headerlink" title="安装python-pip"></a>安装python-pip</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install python-pip</span><br></pre></td></tr></table></figure><h3 id="安装python-six"><a href="#安装python-six" class="headerlink" title="安装python-six"></a>安装python-six</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install python-six</span><br></pre></td></tr></table></figure><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="下载指定的版本："><a href="#下载指定的版本：" class="headerlink" title="下载指定的版本："></a>下载指定的版本：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.openvswitch.org/releases/openvswitch-2.12.0.tar.gz</span><br></pre></td></tr></table></figure><p>以上内容没问题后，访问ftp://xxx.xxx.xxx.xxx即可</p><h2 id="本地用户登录"><a href="#本地用户登录" class="headerlink" title="本地用户登录"></a>本地用户登录</h2><h3 id="配置FTP-权限"><a href="#配置FTP-权限" class="headerlink" title="配置FTP 权限"></a>配置FTP 权限</h3><p>&emsp;了解 VSFTP 配置,vsftpd 的配置目录为 /etc/vsftpd，包含下列的配置文件：<br>&emsp;&emsp;vsftpd.conf 为主要配置文件<br>&emsp;&emsp;ftpusers 配置禁止访问 FTP 服务器的用户列表<br>&emsp;&emsp;user_list 配置用户访问控制</p><h3 id="阻止匿名访问和切换根目录"><a href="#阻止匿名访问和切换根目录" class="headerlink" title="阻止匿名访问和切换根目录"></a>阻止匿名访问和切换根目录</h3><p>&emsp;编辑 /etc/vsftpd/vsftpd.conf，找到下面两处配置并修改：<br>&emsp;# 禁用匿名用户<br>&emsp;anonymous_enable=NO<br>&emsp;# 禁止切换根目录<br>&emsp;chroot_local_user=YES</p><h3 id="重启FTP服务"><a href="#重启FTP服务" class="headerlink" title="重启FTP服务"></a>重启FTP服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart vsftp</span><br></pre></td></tr></table></figure><h3 id="创建-FTP-用户"><a href="#创建-FTP-用户" class="headerlink" title="创建 FTP 用户"></a>创建 FTP 用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 创建用户ftpuser</span><br><span class="line">useradd ftpuser</span><br><span class="line">// 为用户设置密码</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"ftppassword"</span> | passwd ftpuser --stdin</span><br></pre></td></tr></table></figure><h3 id="限制该用户仅能通过-FTP-访问"><a href="#限制该用户仅能通过-FTP-访问" class="headerlink" title="限制该用户仅能通过 FTP 访问"></a>限制该用户仅能通过 FTP 访问</h3><p>&emsp; 限制用户 ftpuser 只能通过 FTP 访问服务器，而不能直接登录服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -s /sbin/nologin ftpuser</span><br></pre></td></tr></table></figure><h3 id="为用户分配主目录"><a href="#为用户分配主目录" class="headerlink" title="为用户分配主目录"></a>为用户分配主目录</h3><p>&emsp; 为用户 ftpuser 创建主目录并约定：<br>&emsp;&emsp; /data/ftp 为主目录, 该目录不可上传文件<br>&emsp;&emsp; /data/ftp/pub 文件只能上传到该目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/ftp/pub</span><br><span class="line">// 创建登录欢迎文件</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Welcome to use FTP service."</span> &gt; /data/ftp/welcome.txt</span><br><span class="line">// 设置访问权限</span><br><span class="line">chmod a-w /data/ftp &amp;&amp; chmod 777 -R /data/ftp/pub</span><br></pre></td></tr></table></figure><p>&emsp;&emsp; 设置为用户的主目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -d /data/ftp ftpuser</span><br></pre></td></tr></table></figure><h2 id="虚拟用户登录"><a href="#虚拟用户登录" class="headerlink" title="虚拟用户登录"></a>虚拟用户登录</h2><h3 id="添加虚拟用户口令文件"><a href="#添加虚拟用户口令文件" class="headerlink" title="添加虚拟用户口令文件"></a>添加虚拟用户口令文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/vsftpd/vftpuser.txt</span><br></pre></td></tr></table></figure><p>添加虚拟用户名和密码，一行用户名，一行密码，以此类推。奇数行为用户名，偶数行为密码。<br>&emsp;bobyuan     // 用户名<br>&emsp;123456      // 密码<br>&emsp;markwang    //用户名<br>&emsp;123456      //密码</p><h3 id="生成虚拟用户口令认证文件"><a href="#生成虚拟用户口令认证文件" class="headerlink" title="生成虚拟用户口令认证文件"></a>生成虚拟用户口令认证文件</h3><p>&emsp;将刚添加的vftpuser.txt虚拟用户口令文件转换成系统识别的口令认证文件。首先查看系统有没有安装生成口令认证文件所需的软件db4-utils。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa |grep db4-utils</span><br></pre></td></tr></table></figure><p>如果没有则需要单独安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh db4-utils-4.3.29-9.fc6.i386.rpm</span><br></pre></td></tr></table></figure><p>下面使用db_load命令生成虚拟用户口令认证文件。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db_load -T -t <span class="built_in">hash</span> -f /etc/vsftpd/vftpuser.txt/etc/vsftpd/vftpuser.db</span><br></pre></td></tr></table></figure><h3 id="编辑vsftpd的PAM认证文件"><a href="#编辑vsftpd的PAM认证文件" class="headerlink" title="编辑vsftpd的PAM认证文件"></a>编辑vsftpd的PAM认证文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/pam.d/vsftpd</span><br></pre></td></tr></table></figure><p>将里面其他的都注释掉，添加下面这两行：<br>&emsp;&emsp;auth required /lib/security/pam_userdb.so db=/etc/vsftpd/vftpuser<br>&emsp;&emsp;account required /lib/security/pam_userdb.so db=/etc/vsftpd/vftpuser</p><p>注:64位系统需使用下面的两行<br>&emsp;&emsp;auth required /lib64/security/pam_userdb.so db=/etc/vsftpd/vftpuser<br>&emsp;&emsp;account required /lib64/security/pam_userdb.so db=/etc/vsftpd/vftpuser</p><h3 id="配置vsftpd-conf（设置虚拟用户配置项）"><a href="#配置vsftpd-conf（设置虚拟用户配置项）" class="headerlink" title="配置vsftpd.conf（设置虚拟用户配置项）"></a>配置vsftpd.conf（设置虚拟用户配置项）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/vsftpd/vsftpd.conf</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;anonymous_enable=NO #关闭匿名用户【该项已存在,需修改】<br>&emsp;&emsp;guest_enable=YES #开启虚拟用户<br>&emsp;&emsp;guest_username=vftpuser #FTP虚拟用户对应的系统用户<br>&emsp;&emsp;pam_service_name=vsftpd #PAM认证文件<br>&emsp;&emsp;user_config_dir=/etc/vsftpd/vsftpd_config_dir #用户配置文件的目录</p><h3 id="编辑用户配置文件"><a href="#编辑用户配置文件" class="headerlink" title="编辑用户配置文件"></a>编辑用户配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/vsftpd/vsftpd_config_dir/user1</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;local_root=/data/ftproot/user1 #【该用户的主目录】<br>&emsp;&emsp;anon_world_readable_only=NO #【下载权限】<br>&emsp;&emsp;anon_upload_enable=YES #【上传权限】<br>&emsp;&emsp;anon_mkdir_write_enable=YES #【创建目录的权限】<br>&emsp;&emsp;anon_other_write_enable=NO #【删除和重命名的权限】</p><h3 id="7、启动vsftpd"><a href="#7、启动vsftpd" class="headerlink" title="7、启动vsftpd"></a>7、启动vsftpd</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/vsftpd start</span><br></pre></td></tr></table></figure><h3 id="8、检查"><a href="#8、检查" class="headerlink" title="8、检查"></a>8、检查</h3><p>ftp 127.0.0.1<br>输入用户名密码登录,然后使用put命令上传文件<br>put a.txt<br>dir检查文件上传成功即可.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在ovs学习过程中，如果自己想要安装一个ovs交换机其实一条简单的命令 apt  install openvswitch 就可以了，但是这种方法只能安装低版本的ovs。在特殊情况下需要安装指定版本，例如需要下发meters表时需要ovs2.8以上的版本，那么就需要下载安装包手动安装。看似一个复杂的过程，其实也是比较简单的。下面就一起来看看如果手动安装一个指定版本ovs交换机。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="SDL" scheme="http://yoursite.com/tags/SDL/"/>
    
      <category term="ODL" scheme="http://yoursite.com/tags/ODL/"/>
    
      <category term="Open vSwitch" scheme="http://yoursite.com/tags/Open-vSwitch/"/>
    
  </entry>
  
  <entry>
    <title>责任意味着什么</title>
    <link href="http://yoursite.com/2019/03/03/excerpt.responsibility/"/>
    <id>http://yoursite.com/2019/03/03/excerpt.responsibility/</id>
    <published>2019-03-02T16:00:00.000Z</published>
    <updated>2019-03-03T15:33:05.416Z</updated>
    
    <content type="html"><![CDATA[<p>给你责任的人同时也给你了权力。<br>                        ——韦恩·戴尔博士《如何成为跨越极限之人》<br><a id="more"></a></p><p>　　如果我们意识不到自己的责任，那么财富的积累就只是妄想。责任不在于我们的国家、周围的环境、我们的伴侣、教育现状、健康状况、财务状况，而在于我们自己。</p><p>　　“等一下”，你可能会说，“那出现健康问题怎么办呢？遇到厄运怎么办呢？我被欺骗了怎么办呢？发生无责任事故又该怎么办呢？总要我们自己承担责任吗？”</p><p>　　假设在一个晴朗的天气里，有人撞上你停得好好的车。你用对此负责吗？你不用对这位陌生人的行为负责，但你要对自己的反应负责。也许你会拿起猎枪击毙那个家伙，进行“正当防卫”。也许你会在一旁幸灾乐祸，因为你当时一下子就想到了，保险公司会支付这笔损失，你的车也因此可以重新进行喷漆，它反正早就需要喷漆了。在这种情况下，你甚至完全坐收渔利。</p><p>　　你并非对所有的事件都要负责，但你总是要对自己对事件的判断和反应负责。</p><h3 id="责任"><a href="#责任" class="headerlink" title="责任"></a>责任</h3><p>　　当然也有一些事件使我们的健康和经济受损，使我们苦恼不堪，但并不是发生在我们身上的事情使我们如此痛苦，而是我们对待事情的反应。同样地，对于自己的遭遇，我们能够自己决定应该做出怎样的应对。</p><p>　　假设这里有一个橘子，如果我轻轻挤压这个橘子，会出现什么情况？“愚蠢的问题，”你回答道，“当然会挤出橘子汁啊。”正解。那么，同一个橘子，如果我用脚踩，会发生什么情况呢？会踩出橘子汁。那么，如果我将这个橘子扔向墙壁呢？还是会出来橘子汁。</p><p>　　这个橘子并不对我所做之事“负责”，但对它自己的表现“负责”。它一直都以体内的橘子汁来对我的行为做出应对。同样地，我们也对自己内心的反应负责——对我们的态度和我们的表现负责。</p><p>　　责任意味着做出恰当的反应。我们一直都对自身的反应和表现负有责任。要承认，我们掌控自身反应并不容易，尤其是，当我们自身做出的反应很糟糕的时候。仅仅是因为对方先挑衅，你就和他争吵起来，这是不理性的。我们完全可以做出除争执和纠纷以外的别的反应。转身追杀一条刚刚咬过我们的毒蛇，这只会使毒液更快地流遍我们的全身，更好的方法是，马上采取解毒的措施。除了争吵，还可以静下心来分析事态。举个例子，我们可以扪心自问，合作伙伴的行为有多少仅仅只是针对我们先前恶劣态度的反应。</p><p>　　我们的反应便是我们针对突发事件做出的一个回应。我们需要对这个回应负责。责任这个单词在英语中叫作“responsibility”，在这个单词中隐藏着另外两个单词“response”（回应）和“ability”（技巧）。因此，责任这一词用英语来解释就是：有技巧地进行回应。以争吵应对争执，以冲突应对挑衅，绝非最佳的问题解决方式。</p><p>　　大多数人都会推卸责任。当人们不想承担责任时，我们总是听到他们用这3个理由来搪塞责任：</p><p>　　1。“是基因的错。”</p><p>　　2。“是父母的错。”</p><p>　　3。“是客观环境的错。”</p><p>　　一名年轻男子刺杀了两个人。于是，几名记者开始询问他的个人生活和他的犯案动机。</p><p>　　他向他们讲述，他在一个破碎的家庭中长大。他能记起来的画面便是父亲喝得酩酊大醉，然后开始暴打母亲。他们靠父亲偷来的东西生活。自然而然地，7岁时，他也学着父亲的样子开始偷盗。在杀人未遂而处以拘留之后，他又犯下了这两起杀人罪。他用这句话结束自己的故事：“在这种环境下成长，我还能成为什么样的人呢？”</p><p>　　这个年轻人有个双胞胎哥哥。记者得知这一情况之后，也去拜访了这位哥哥。令他们感到惊讶的是，这位哥哥跟他的弟弟是截然相反的两个人。他是一位有名望的律师，声誉极佳，被选入市政委员会和教区委员会。他已婚，育有两个孩子，家庭生活幸福美满。</p><p>　　记者感到十分吃惊。面对记者提出的问题“他何以发展至此”时，他讲述了同一个故事。不过，他这样结束自己的故事：“在常年经历这些事情的情况下，我除了变成现在这样，还能变成其他什么样子呢？”</p><p>　　同样的基因，同样的父母，同样的教育，同样的环境，但是两个人对事情的描述和反应却大相径庭。两个在同样环境下成长起来的人怎么会走上截然不同的道路呢？也许两个人都认识了一位良师益友，但一个人听从了劝告，而另一个人却没有。也许两个人都得到了同一本书，并开始了阅读，但只有一个人坚持读了下去，而另一个人却没有。原因我们无从得知。总之他们就是成长成了两个截然相反的人。</p><p>　　尽管存在各种各样的障碍，但我们仍然要负责任。对情况进行判断，做出反应的毕竟是我们自己。想象一下，如果从今天开始所有的金钱都将被充公，然后给每人发放5？000欧元，会发生什么事情呢？接近傍晚时，便有人少了3？000欧元，而有人的钱却因此变多了，几周之后又出现了富人和穷人之分。研究者声称，大约在一年后，金钱的分配又会回到它最初的样子。</p><h3 id="你对这本书的反应如何"><a href="#你对这本书的反应如何" class="headerlink" title="你对这本书的反应如何"></a>你对这本书的反应如何</h3><p>　　此外，既然我们刚好讲到责任，我是对我在书中介绍的内容负责的，而你对你在书中学到的东西负责。这也同样适用于我的讲座。学员在参加讲座后提高了收入，这样的情况我们见证了一次又一次。有些人甚至使自身收入翻了一番。大多数人存下了至少20％的资金，并且开始积累财富了。</p><p>　　许多人开始运动，健康饮食，健康生活。我引导学员在讲座上共同进行冥想，现在许多学员也将这15分钟纳入自己的日常生活中去了，他们的压力也因此得到了释放。我们接到许多学员的来电，通过投资，他们已经连续多年平均获利超过12％。尤其使我们感到高兴的是，学员改变了自己的金钱观，并且使用他们获得的财富做一些好事。你真应该听一听他们的语调中透出的满足感。他们不仅清偿了债务，还发现了其他的收入渠道。大多数人都学会了热爱金钱，并且学会了使用金钱使自己生活舒适。</p><p>　　但是，一些人来参加了我的讲座，在课程结束后无所作为。也许他们希望的是我挥一挥魔杖就能改变他们的生活，在他们的地下室里装满金条。</p><h3 id="“是别人的错……”"><a href="#“是别人的错……”" class="headerlink" title="“是别人的错……”"></a>“是别人的错……”</h3><p>　　有一位年轻人，他几年前参加过我的讲座《经济成功的突破口》，前段时间我又遇到他了。他见到我就说：“不管用，你讲的东西对我根本没有帮助。”因为我在课上是全心全意地想帮助大家，对大家产生积极的影响，所以当他这样说时，我感到相当吃惊。但随后这个年轻人又接着说道：“你的方法在刚开始的时候真的有效，我在第一年中就多挣了13 500欧元，并且存下了25％。在第二年里，我就已经有超过30 000欧元的存款了，也将我所有的债务都还清了。按照你的建议，我还和两个朋友一起成立了一个储蓄俱乐部。我们将钱集中存储在一起，每人每年能得到17.3％的分红。但不知什么时候起，大家都停止了这项活动，我也不再存钱了。你知道我拿我的存款做了什么吗？它现在就停在我的门外，我买了一辆保时捷……”</p><p>　　他改变了自己的信仰。他在头两年中已经掌控了自己的财务状况，并且开始积累财富了。他知道这种方法也适用于他。但是之后他懈怠了，“宰了自己的鹅”，只是为了买一辆车。而他不想承担过失。</p><p>　　谁应该对此负责？将责任推给他人是不是不人道？重要的是：你把责任推给了谁，也就给了他权力。将责任推给他人是如此容易，让我们自我感觉良好。于是我们便这样做了：是公司的错，我在这家公司没法发挥我的才干；是伙伴的错；我的健康不允许……难道我们真的想让公司、伙伴、健康来操纵我们吗？你想一想：有责任的人，同时也拥有权力。出于这个原因，我总是喜欢将责任揽到自己身上。因为我喜欢自己掌控自己的生活。</p><h3 id="后果和错误"><a href="#后果和错误" class="headerlink" title="后果和错误"></a>后果和错误</h3><p>　　如果我们以前犯过错呢？那又有什么样的责任呢？以前发生的事情会对现在造成影响，举几个例子：一名离婚的男子必须支付生活费给他前妻；健康受损的人必须注意饮食；一个负债累累的人必须做一个表白清偿诚意并交代全部财产情况的宣誓；犯有刑事罪的人必须坐牢。</p><p>　　道理已经很清晰了：在我们做出行为决定之后，其所造成的后果也随之而来。拾起木棍的一端，它的另一端也随之起来。这个认知会使我们在生活中变得更加富有责任心。</p><p>　　那已经发生过的事情呢？通常情况下，我们都需要为自己承担责任，因为我们无法控制我们犯下的错误所造成的后果。但这并不意味着我们应该推卸过去的责任。我们对事件后果的判断和反应，便是我们的责任所在。我们对事件后果的反应直接影响到该事件接下来的发展状况。问题的关键在于：我们想要自己掌控将来事态的发展，还是让我们的错误及其后果掌控将来的事态？如果我们在事件发生时勇于承担责任，那么所有的负面情绪在这一刻都会失去掌控力。</p><h3 id="你能掌控自己的未来"><a href="#你能掌控自己的未来" class="headerlink" title="你能掌控自己的未来"></a>你能掌控自己的未来</h3><p>　　对未来做好准备的最佳方法便是塑造未来。你可能不相信自己能做到吧？那你就跟大多数人一样，意识不到自己在未来10年都有哪些机会。</p><p>　　塑造未来的意识始于你的过去。它成长于你的知识之中，那些在过去的时间中改变了许多东西的知识。我们身上发生的潜移默化的改变，自身是注意不到的。我们通常都是一点一点地发生改变，这些变化难以察觉。</p><p>　　向自己提几个问题。你10年前的情况如何？作为一个普通人、一个名人、一个专家或者别人的合作伙伴，你干得如何？你的经验、目标和技术知识如何？你是如何与人打交道的，你的财务状况如何？请在下面的横线上写下你的答案。</p><p>　　你思考得越全面，你就能更多地认识到你是负有责任的。你将获得全新的自信。如果你在过去10年已经做出了这么多改变，那么你在未来10年又会变成什么样呢？</p><p>　　你10年前有没有想过现在会变成这个样子？想一想，你过去做出的哪些决定对你变成现在的样子（和你现在的工作、你现在拥有的一切）负主要责任。</p><p>　　你做出了这些决定。你决定了自己的希望和目标。你有能力掌控自己的命运。你可以从把实现梦想的10年缩短成7年开始。你现在就可以确定你想在7年内实现些什么，你想拥有什么，你想做一份什么样的工作。仔细想清楚，因为一旦你使用本书进行实践，你便会逐步实现你的梦想。</p><p>　　这种说法能成真吗？梦想成真的自信来源于你的过往。通过记录你过去积极正面的经历和成果，来延长它们对你的效应吧。这样你的意识便会更加清晰，你也能增强自信。</p><h3 id="承担责任，拓宽你的可控领域"><a href="#承担责任，拓宽你的可控领域" class="headerlink" title="承担责任，拓宽你的可控领域"></a>承担责任，拓宽你的可控领域</h3><p>　　有一些你能直接控制和影响的事物，我称为可控领域。还有一些你虽然感兴趣但无法影响的事物。想象一下，一个陌生人砸坏了你的车，这件事虽然和你有关，也就是说在你的个人范畴之内，但并不属于你的可控领域。</p><p>　　对于发生在你个人范畴之内的事情，你需要对你的判断和反应负责。</p><p>　　我们绝不能满足于现有的可控领域。有相关经验的人都知道，可控领域是可以拓宽的。孩提时代，我们的可控领域很小，20岁时明显大了很多。到今天，它还在继续扩展。你可以通过拓展可控领域来积累你的财富。</p><p>　　如果我们总是认为，问题是由外界因素引起的，所以它不可控，那么这个想法本身就是问题所在。如果总是谴责客观因素和他人，我们就相当于自动放弃了拥有控制权的机会。抱怨和指责的行为只会体现出我们的软弱。</p><p>　　之后，我们对事物产生积极影响的能力也逐渐消失殆尽。如果真的想改善我们的处境，就开始着手吧。解决方法要从内在去找，而非外在。我们可以主动对所有发生在个人范畴之内的事情承担责任，同时继续拓宽可控领域。既然以前已经拓宽过可控领域，我们在未来也能做到。</p><p>　　16岁时，我下定决心前往加利福尼亚州，并在那里生活。到达加州之后，我发现一切都与想象的不一样。我坐在旅店的床上，感到十分绝望。我也完全不懂美式英语，实际上我的英语水平基本相当于零。我怎么在那儿上学和挣钱呢？遭遇这样的困难，我大哭了一场，沮丧极了。但是慢慢地，绝望感消失了，并且被顽强和自豪取代。我去加州，就是为了通过努力而达到目标。我知道，我的目标不那么容易达成。</p><p>　　对于拓宽可控领域，这里有4种方法。</p><p>　　1。从舒适的环境中脱离出来</p><p>　　我们应该离开舒适的环境，也就是使我们感到安全和惬意的环境。当我坐在加州的床上时，我已经远离了我的舒适环境。开始在那个陌生城市摸索时，我的可控领域也得到了极大的拓展。很快，我便可以在任意一个区域都感到舒服。然后就发生了一件神奇的事：离开最初的舒适环境之后，我也能感到舒服。</p><p>　　如果你经常旅行，那么你肯定也经历过相同的感觉。每次旅行都会将你带离你熟悉的环境。最终你会喜欢上旅行带给你的感觉：新鲜且特别。这样你也就学会了如何在舒适环境之外感受到惬意。</p><p>　　如果我们习惯于在每一次战胜挑战之后都马上迎接新的更大的挑战，那我们的可控领域便会快速地得以拓展。我也相信，这种态度最接近人类的天性和使命。踏入一个新环境，竭尽全力获得成功之后，我们就会觉得自己充满前所未有的活力。虽然对于一艘船来说，在港口更有安全感，但船仅用于停在港口，那我们也不会再造船了。我们虽然需要安全感，但同样也需要冒险和改变。在敢于尝试新事物，迎接新挑战的时刻中，我们会成长起来。拥有最广可控领域的人，几乎一直都处在舒适环境之外。如果没有一场接一场的危机，他们会觉得索然无味。就像运动员必须通过运动来保持活力，我们也需要新的挑战。</p><p>　　2。问题</p><p>　　问题的存在同样为我们拓宽可控领域创造了良好的机会。一个问题之所以成为一个问题，是因为它虽然处在我们的个人范畴之内，却处于我们的可控领域之外。</p><p>　　同时，每一个问题也都为我们带来成长的机会。如果我们只是提出这样一个问题，“我怎么解决这个问题呢”，那可能事情不会有多少好转。不过我们也可以另提一个问题：“我如何创造一种情况，使这个问题不再出现呢？”这种新的情况指：不断拓宽我们的可控领域。</p><p>　　举个例子：你聚会归来，发现家里被入室盗窃，门被撬开，大量财物丢失。如果你只想解决问题，直接给锁匠和保险顾问打电话就好了。但如果你想避免这种情况再次出现，就需要多做一些事情，比如安装一个警报器，买一条看家的狗。如此一来，你就创造了一个防盗环境，你也拓宽了你的可控领域。就算你不在家，你的房子现在也有了监控。</p><p>　　逃避问题不会使人生活富裕。想要拥有更多金钱的人，就应该为自己列一个长长的问题清单。</p><p>　　3。正确的提问方式</p><p>　　我们说过，提问质量决定我们的生活质量。为什么会这样呢？因为我们一直都处于一个自我对话的场景中。我们的大脑不断地抛出问题，然后自己回答问题。</p><p>　　如果提问方式是“我能做到吗”，我们就可能不会去做这件事。仅仅因为提问方式就会导致出现至少一个疑虑。更好的提问方式是：“我如何做成这件事情呢？”这种提问方式就排除了失败的可能性。你会成功的，问题只是如何成功。“如何”这个问题会促使你去寻找实现目标的方法，当然这个方法也是在你的可控范围之外的。</p><p>　　我们首先要问的不是“为什么”，而是“怎么做”。“怎么做”寻找的是解决方案，“为什么”寻找的是托词。寻找并最终找到托词的人，就没有必要再拓宽他的可控领域了，因为他是不负责的，同时他也就放弃了自己的权力。提问“怎么做”的人，他的答案很快便会将他引出现有的可控领域。因为“怎么做”是包含“为什么”这一层含义的，而反过来，“为什么”却不包含“怎么做”，也不会促使我们去寻找解决方案。</p><p>　　“我能做什么？”这个问题也是至关重要的。设想一下，如果在加州的时候我只关注我不会的和我不知道的东西，我肯定会找到很多理由赶快回家。这世上有许多一个16岁男孩在陌生国度无法做到的事情。然而，只关注我无法做到的东西并不会给我带来金钱和好处。相反，我必须更多地关注我会的东西。</p><p>　　正确的提问方式应该是：“我会做什么？我知道什么？我有哪些机会？”比如我会德语，所以我去教了德语课。然而我的英语实在是太差了，以至于如果我必须用英语进行解释时，都没法连续上5分钟的课。于是我就用德语上课。这样上课，虽然刚开始进度十分缓慢，但我的学生进步神速。今天我才知道，实际上这就是学习外语的最好方式。</p><p>　　如果提的问题是“谁来负责任”，那我们就是在寻找借口。当我们说“你负有责任”时，将事情引向积极方向的机会就消失了。而且，这个关于责任的问题还会将我们一直引向过去。正确的提问应该是：“在当时谁应该对此负责？”但你现在不能拓宽你当时的可控领域，所以需要将精力运用在当下。我们提出的问题也应该以当下为中心：我们现在能做些什么？</p><p>　　正确的提问方式可以帮助你拓宽可控领域，让我举最后一个例子。大多数人都会混淆提出“怎么做”和“是否”这两个问题的时机。众所周知，果断决策很重要。尽管如此，很多人还是很难做到。为什么？因为他们已经打算好他们应该“怎么做”了。“怎么做”是一个好的提问方式，但不适用于需要果断决策的场合。</p><p>　　现在再回到我去加州的例子上来。想象一下，如果我当时问自己“如果我下定决心前往加州，我怎么在那边战胜所有的困难呢”，会发生什么？你相信我会决定去吗？</p><p>　　当你做决定时，你应该问“是否”。这个问题的背后还藏着另一个问题“为什么”。你为什么要做某件事情？哪些原因促使你做这件事情？“怎么做”在这个时刻并不重要，它会在之后顺其自然地出现。</p><p>　　做完决定之后，你就不用再关注“是否”这个问题了。你大可不必在遇到第一个困难时就提出这样的问题：我的决定正确吗？我是不是应该尝试一些别的方法？如果这个时候不去思考如何解决困难，你便会重新提出“是否”的问题。我们都认识一些做决定时患得患失，之后又很快反悔的人。正确的决策顺序应该是：</p><p>　　（1）我为什么要这样做？决定“是否”要做。</p><p>　　（2）我应该“怎么做”？出现下一个困难的话，你如何解决？一直牢记不放弃的理由。</p><p>　　我们在内心对话场景中提出的问题，能决定我们的前进方向，使我们的可控领域缩小或扩大。</p><p>　　4。扩大你的个人范畴</p><p>　　你的个人范畴包括所有影响你的事物、对你而言重要的和你感兴趣的事物。如果某样事物对于你很重要，那你肯定想对其施加影响。你会不可避免地开始思考如何拓宽你的可控领域，因为你想在个人范畴之内尽可能多地按照你的方式对事物进行控制。</p><p>　　假设维利·文齐希和理查德·瑞吉西在一个跨国公司的同一个部门工作。如果说维利·文齐希只对自己所在的部门感兴趣，那他的可控领域就不会很大。而理查德·瑞吉西却在考虑公司的发展方向、客户关系和市场策略。为了提升自己的影响力，他也和其他各个部门保持关系。他不满足于现状，因为他想和公司总部也建立联系。他知道竞争有多激烈。于是，瑞吉西先生自然而然地拓宽了自己的可控领域。</p><p>　　研究者发现，一个企业的客户圈子与企业的可控范畴是成比例地增长的。另外一些企业却将精力放在非顾客身上，他们研究的是：为什么这些人不买我们的东西，我们如何才能做到让这些人也来购买我们的商品。后者的范畴较前者而言大很多，其客户圈子也相应地快速扩大。</p><h3 id="没有责任的生活会更轻松吗"><a href="#没有责任的生活会更轻松吗" class="headerlink" title="没有责任的生活会更轻松吗"></a>没有责任的生活会更轻松吗</h3><p>　　我们不仅对自己所做之事负有责任，也对自己未做之事负有责任。有的时候，逃避责任对我们的诱惑力非常大。很多时候，不承担责任显得方便又舒适。但我们之后需要付出的代价是极高的。因为我们会被别人玩弄在手掌之中，只能按照别人为我们谱写的剧本来生活。</p><p>　　我们充分利用自己的潜能时，会获得最大的满足感。我所理解的成功就是成为最好的自己。我全力以赴时，会感受到前所未有的活力。</p><h3 id="为了改善你的财务状况而承担责任"><a href="#为了改善你的财务状况而承担责任" class="headerlink" title="为了改善你的财务状况而承担责任"></a>为了改善你的财务状况而承担责任</h3><p>　　大多数人对于自身的财务状况都十分轻率。你无处可学相关的知识。大多数父母也并非正面榜样。学校里没有“如何创造财富”的专业课程。我们的社会鼓励过度消费，过度消费无处不在。</p><p>　　你周围的大多数人也都是负面榜样。抱怨缺钱成了一种潮流。一些格言变得备受欢迎，比如“钱用光了，这个月还剩一大半”。此外，金钱对许多人来说，也是一个乏味的、令人不快的话题，“有钱人不谈论钱”，“金钱不是最重要的东西”。我们在</p><p>　　第一章中就已经知道，金钱很重要。如果你根本不重视金钱，使自己陷入困境，这个时候金钱就会变得尤为重要。换句话说：你必须避免使金钱成为你生活中价值很高的东西。因此，你必须承担责任。</p><p>　　当然，“金钱是万能的”这样的想法很愚蠢。然而，认为“有钱人结识不到有趣的人，有钱人不能去看迷人的风景，有钱人不能扩大自己的机会，有钱人不能集中精力做别的工作”的人，也同样愚蠢。</p><p>　　我们使用金钱做的事情，会在未来得以展现。我们为了金钱而做的事情，也会在未来产生效果。我们像设计师一样塑造自己的未来：我们在今天描画一个未来的蓝图，明天我们就按照这个蓝图来生活。古巴比伦人早就清楚这一道理：“明智的行为会伴随我们一生，使我们感到快乐，救我们于危难；同样地，愚蠢的行为也会伴随我们，使我们备受折磨，烦恼不堪。”</p><p>　　你会发现，金钱远比大多数人想象的要美好。积累财富也远比大多数人想象的要简单。但是你必须承担责任并真正地去履行责任。贫穷是自行产生的。比如说，贫穷会产生于推卸责任的时候。为了财富，你必须做几件基本的事情，这个内容我们接下来还会进行详细探讨。但是一切起源于你大脑中的想法：只有你（绝非任何人）能对你7年内收获多少金钱负责。</p><h3 id="能量贴士"><a href="#能量贴士" class="headerlink" title="能量贴士"></a>能量贴士</h3><blockquote><p>你对自己的生活和财务状况全权负责。</p></blockquote><blockquote><p>离开你的舒适环境</p></blockquote><blockquote><p>将困难当作成长的机会</p></blockquote><blockquote><p>提出正确的问题</p></blockquote><blockquote><p>扩大你的个人范畴</p></blockquote><blockquote><p>这世上有一些事你无能为力。但你可以决定，你打算如何判断以及如何对此做出反应。在这方面，你一直都是拥有权力的。</p></blockquote><blockquote><p>责任意味着：没有任何东西能改变你的态度或品格，因为你是按照自己的本性对事情做出反应。你可以决定自己以哪种方式去生活。这种态度使你能够生活幸福，并且成为最好的自己。如果你勇于承担责任，那么你就能在7年内变得富有。</p></blockquote><h3 id="本章要点"><a href="#本章要点" class="headerlink" title="本章要点"></a>本章要点</h3><p>　　你并非要对所有的事件负责。但你总是要对自己对事件的判断和反应负责。</p><p>　　给你责任的人同时也给你了权力。</p><p>　　你昨天做出的决定确定你的现在。你今天做出的决定确定你的未来。</p><p>　　愿望是我们未来生活的预兆。我们决定我们想要得到些什么，同时也决定了将来会获得些什么。</p><p>　　4种方法拓宽你的可控领域：</p><p>　　1. 离开你的舒适环境。</p><p>　　2. 将困难当作成长的机会，并且问自己：我如何创造一种情况，使这个问题不再出现呢？</p><p>　　3. 提出正确的问题。</p><p>　　4. 扩大你的个人范畴，同时你的可控领域也得到了拓宽。</p><p>&emsp;&emsp;&emsp;&emsp;- 随着年龄增长，你只会对自己没做过的事情感到后悔。</p><p>&emsp;&emsp;&emsp;&emsp;- 没有责任心地生活就意味着，使自己退化为一个无力的牺牲品，意味着按照别人为你谱写的剧本来生活。</p><p>&emsp;&emsp;&emsp;&emsp;- 如果我们在事件发生时勇于承担责任，那么所有的负面情绪在这一刻都会失去掌控力。</p><p>&emsp;&emsp;&emsp;&emsp;- 只有你自己（绝非任何人），能对你7年内收获多少金钱负责。</p><blockquote><p>本文摘录自《财务自由之路：7年内赚到你的第一个1000万》。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;给你责任的人同时也给你了权力。&lt;br&gt;                        ——韦恩·戴尔博士《如何成为跨越极限之人》&lt;br&gt;
    
    </summary>
    
    
    
      <category term="excerpt" scheme="http://yoursite.com/tags/excerpt/"/>
    
  </entry>
  
  <entry>
    <title>Centos7.2下搭建FTP服务器</title>
    <link href="http://yoursite.com/2019/03/01/Linux.FTP%20server/"/>
    <id>http://yoursite.com/2019/03/01/Linux.FTP%20server/</id>
    <published>2019-02-28T16:00:00.000Z</published>
    <updated>2019-03-03T15:22:33.707Z</updated>
    
    <content type="html"><![CDATA[<p>FTP服务器（File Transfer Protocol Server）是在互联网上提供文件存储和访问服务的计算机，它们依照FTP协议提供服务。 FTP是File Transfer Protocol(文件传输协议)。顾名思义，就是专门用来传输文件的协议。简单地说，支持FTP协议的服务器就是FTP服务器。<br><a id="more"></a></p><p style:="" size:50px;=""><b>Centos7.2下搭建FTP服务器</b></p><p>在搭建服务器之前检查yum源，或者连通网络设置一些正规的源</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="安装ftp-使用yum"><a href="#安装ftp-使用yum" class="headerlink" title="安装ftp-使用yum"></a>安装ftp-使用yum</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y vsftpd</span><br></pre></td></tr></table></figure><h3 id="启动ftp服务-默认为21端口"><a href="#启动ftp服务-默认为21端口" class="headerlink" title="启动ftp服务-默认为21端口"></a>启动ftp服务-默认为21端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start vsftpd</span><br></pre></td></tr></table></figure><h3 id="查看端口是否占用"><a href="#查看端口是否占用" class="headerlink" title="查看端口是否占用"></a>查看端口是否占用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -nltp | grep 21</span><br></pre></td></tr></table></figure><h2 id="匿名访问"><a href="#匿名访问" class="headerlink" title="匿名访问"></a>匿名访问</h2><p>以上内容没问题后，访问<a href="ftp://xxx.xxx.xxx.xxx即可" target="_blank" rel="noopener">ftp://xxx.xxx.xxx.xxx即可</a></p><h2 id="本地用户登录"><a href="#本地用户登录" class="headerlink" title="本地用户登录"></a>本地用户登录</h2><h3 id="配置FTP-权限"><a href="#配置FTP-权限" class="headerlink" title="配置FTP 权限"></a>配置FTP 权限</h3><p>&emsp;了解 VSFTP 配置,vsftpd 的配置目录为 /etc/vsftpd，包含下列的配置文件：<br>&emsp;&emsp;vsftpd.conf 为主要配置文件<br>&emsp;&emsp;ftpusers 配置禁止访问 FTP 服务器的用户列表<br>&emsp;&emsp;user_list 配置用户访问控制</p><h3 id="阻止匿名访问和切换根目录"><a href="#阻止匿名访问和切换根目录" class="headerlink" title="阻止匿名访问和切换根目录"></a>阻止匿名访问和切换根目录</h3><p>&emsp;编辑 /etc/vsftpd/vsftpd.conf，找到下面两处配置并修改：<br>&emsp;# 禁用匿名用户<br>&emsp;anonymous_enable=NO<br>&emsp;# 禁止切换根目录<br>&emsp;chroot_local_user=YES</p><h3 id="重启FTP服务"><a href="#重启FTP服务" class="headerlink" title="重启FTP服务"></a>重启FTP服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart vsftp</span><br></pre></td></tr></table></figure><h3 id="创建-FTP-用户"><a href="#创建-FTP-用户" class="headerlink" title="创建 FTP 用户"></a>创建 FTP 用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 创建用户ftpuser</span><br><span class="line">useradd ftpuser</span><br><span class="line">// 为用户设置密码</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"ftppassword"</span> | passwd ftpuser --stdin</span><br></pre></td></tr></table></figure><h3 id="限制该用户仅能通过-FTP-访问"><a href="#限制该用户仅能通过-FTP-访问" class="headerlink" title="限制该用户仅能通过 FTP 访问"></a>限制该用户仅能通过 FTP 访问</h3><p>&emsp; 限制用户 ftpuser 只能通过 FTP 访问服务器，而不能直接登录服务器：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -s /sbin/nologin ftpuser</span><br></pre></td></tr></table></figure></p><h3 id="为用户分配主目录"><a href="#为用户分配主目录" class="headerlink" title="为用户分配主目录"></a>为用户分配主目录</h3><p>&emsp; 为用户 ftpuser 创建主目录并约定：<br>&emsp;&emsp; /data/ftp 为主目录, 该目录不可上传文件<br>&emsp;&emsp; /data/ftp/pub 文件只能上传到该目录下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/ftp/pub</span><br><span class="line">// 创建登录欢迎文件</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Welcome to use FTP service."</span> &gt; /data/ftp/welcome.txt</span><br><span class="line">// 设置访问权限</span><br><span class="line">chmod a-w /data/ftp &amp;&amp; chmod 777 -R /data/ftp/pub</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp; 设置为用户的主目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -d /data/ftp ftpuser</span><br></pre></td></tr></table></figure></p><h2 id="虚拟用户登录"><a href="#虚拟用户登录" class="headerlink" title="虚拟用户登录"></a>虚拟用户登录</h2><h3 id="添加虚拟用户口令文件"><a href="#添加虚拟用户口令文件" class="headerlink" title="添加虚拟用户口令文件"></a>添加虚拟用户口令文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/vsftpd/vftpuser.txt</span><br></pre></td></tr></table></figure><p>添加虚拟用户名和密码，一行用户名，一行密码，以此类推。奇数行为用户名，偶数行为密码。<br>&emsp;bobyuan     // 用户名<br>&emsp;123456      // 密码<br>&emsp;markwang    //用户名<br>&emsp;123456      //密码</p><h3 id="生成虚拟用户口令认证文件"><a href="#生成虚拟用户口令认证文件" class="headerlink" title="生成虚拟用户口令认证文件"></a>生成虚拟用户口令认证文件</h3><p>&emsp;将刚添加的vftpuser.txt虚拟用户口令文件转换成系统识别的口令认证文件。首先查看系统有没有安装生成口令认证文件所需的软件db4-utils。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa |grep db4-utils</span><br></pre></td></tr></table></figure></p><p>如果没有则需要单独安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh db4-utils-4.3.29-9.fc6.i386.rpm</span><br></pre></td></tr></table></figure></p><p></p><p>下面使用db_load命令生成虚拟用户口令认证文件。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db_load -T -t <span class="built_in">hash</span> -f /etc/vsftpd/vftpuser.txt/etc/vsftpd/vftpuser.db</span><br></pre></td></tr></table></figure></p><h3 id="编辑vsftpd的PAM认证文件"><a href="#编辑vsftpd的PAM认证文件" class="headerlink" title="编辑vsftpd的PAM认证文件"></a>编辑vsftpd的PAM认证文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/pam.d/vsftpd</span><br></pre></td></tr></table></figure><p>将里面其他的都注释掉，添加下面这两行：<br>&emsp;&emsp;auth required /lib/security/pam_userdb.so db=/etc/vsftpd/vftpuser<br>&emsp;&emsp;account required /lib/security/pam_userdb.so db=/etc/vsftpd/vftpuser</p><p>注:64位系统需使用下面的两行<br>&emsp;&emsp;auth required /lib64/security/pam_userdb.so db=/etc/vsftpd/vftpuser<br>&emsp;&emsp;account required /lib64/security/pam_userdb.so db=/etc/vsftpd/vftpuser</p><h3 id="配置vsftpd-conf（设置虚拟用户配置项）"><a href="#配置vsftpd-conf（设置虚拟用户配置项）" class="headerlink" title="配置vsftpd.conf（设置虚拟用户配置项）"></a>配置vsftpd.conf（设置虚拟用户配置项）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/vsftpd/vsftpd.conf</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;anonymous_enable=NO #关闭匿名用户【该项已存在,需修改】<br>&emsp;&emsp;guest_enable=YES #开启虚拟用户<br>&emsp;&emsp;guest_username=vftpuser #FTP虚拟用户对应的系统用户<br>&emsp;&emsp;pam_service_name=vsftpd #PAM认证文件<br>&emsp;&emsp;user_config_dir=/etc/vsftpd/vsftpd_config_dir #用户配置文件的目录</p><h3 id="编辑用户配置文件"><a href="#编辑用户配置文件" class="headerlink" title="编辑用户配置文件"></a>编辑用户配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/vsftpd/vsftpd_config_dir/user1</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;local_root=/data/ftproot/user1 #【该用户的主目录】<br>&emsp;&emsp;anon_world_readable_only=NO #【下载权限】<br>&emsp;&emsp;anon_upload_enable=YES #【上传权限】<br>&emsp;&emsp;anon_mkdir_write_enable=YES #【创建目录的权限】<br>&emsp;&emsp;anon_other_write_enable=NO #【删除和重命名的权限】</p><h3 id="7、启动vsftpd"><a href="#7、启动vsftpd" class="headerlink" title="7、启动vsftpd"></a>7、启动vsftpd</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/vsftpd start</span><br></pre></td></tr></table></figure><h3 id="8、检查"><a href="#8、检查" class="headerlink" title="8、检查"></a>8、检查</h3><p>ftp 127.0.0.1<br>输入用户名密码登录,然后使用put命令上传文件<br>put a.txt<br>dir检查文件上传成功即可.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;FTP服务器（File Transfer Protocol Server）是在互联网上提供文件存储和访问服务的计算机，它们依照FTP协议提供服务。 FTP是File Transfer Protocol(文件传输协议)。顾名思义，就是专门用来传输文件的协议。简单地说，支持FTP协议的服务器就是FTP服务器。&lt;br&gt;
    
    </summary>
    
    
    
      <category term="服务器" scheme="http://yoursite.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="Centos" scheme="http://yoursite.com/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>hexo+github_page搭建博客</title>
    <link href="http://yoursite.com/2018/10/13/hexo+github/"/>
    <id>http://yoursite.com/2018/10/13/hexo+github/</id>
    <published>2018-10-12T16:00:00.000Z</published>
    <updated>2018-10-26T05:21:48.189Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo 是一个快速、简洁且高效的博客框架，可托管于github pages，可免去维护服务器的麻烦，博主们可更专注于内容的创作。<br><a id="more"></a></p><p style:="" size:50px;=""><b>使用Hexo+github搭建属于自己的博客</b></p><p>搭建步骤：</p><h2 id="根据”Hexo官网“步骤安装git-node-js"><a href="#根据”Hexo官网“步骤安装git-node-js" class="headerlink" title="根据”Hexo官网“步骤安装git,node.js"></a>根据”<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官网</a>“步骤安装git,node.js</h2><p color:="" red;="">注意：在安装”node.js”软件时勾选Add to PATH选项</p><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>执行下列命令安装hexo：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装 Hexo 完成后，选择一个博客的主目录，然后执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line"><span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>新建完成之后该目录的目录结构如下:<br>&emsp;&emsp;_config.yml     # 网站的 配置 信息<br>&emsp;&emsp;package.json          # 应用程序的信息<br>&emsp;&emsp;scaffolds             # 模板文件夹<br>&emsp;&emsp;source                # 博文源文件目录<br>&emsp;&emsp;_drafts               # 草稿文件夹<br>&emsp;&emsp;_posts                # 博文文件夹<br>&emsp;&emsp;themes                # 主题文件夹</p><p>&emsp;再执行以下命令，访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 即可快速体验Hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="http://pgnfycdbr.bkt.clouddn.com/static/images/git+githubpage_hexo.png" alt="hexo"></p><h2 id="根据-Hexo文档-对网站做一些简单的配置，然后修改主题为next。更多主题可到”hexo主题网站查看“。"><a href="#根据-Hexo文档-对网站做一些简单的配置，然后修改主题为next。更多主题可到”hexo主题网站查看“。" class="headerlink" title="根据 Hexo文档 对网站做一些简单的配置，然后修改主题为next。更多主题可到”hexo主题网站查看“。"></a>根据 Hexo文档 对网站做一些简单的配置，然后修改主题为next。更多主题可到”<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo主题网站查看</a>“。</h2><p>&emsp;安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> your-hexo-site</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>&emsp;修改hexo根目录的_config.yml中的theme参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;然后执行 hexo clean &amp; hexo g &amp; hexo s 命令即可看到效果</p><p>&emsp;&emsp;更多的主题配置可见 <a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">next官网</a></p><h2 id="配置-github-pages"><a href="#配置-github-pages" class="headerlink" title="配置 github pages"></a>配置 github pages</h2><p>&emsp;&emsp;在配置github pages页面之前需要到<a href="www.github.com">GitHub官网</a>注册一个属于自己的账号。</p><p>&emsp;&emsp;然后到github上创建一个新的空仓库，名字格式为 账户名.github.io，譬如我的github账户名是 c-liberty，所以我的github pages 仓库的名字应为 c-liberty.github.io</p><p>安装插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;然后配置 Hexo根目录的 _config.yml，xxx为你的用户名，注意还需要加入你的 github 用户名和密码，不然后面推送失败（但是上传代码时注意防止密码泄露）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    <span class="built_in">type</span>: git</span><br><span class="line">repository: git@github.com:xxx/xxx.github.io.git</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;如果你是第一次配置 github 远程仓库，你还须将你电脑的ssh key 配置到 github 上，具体可参考 git远程仓库</p><h2 id="配置SSH"><a href="#配置SSH" class="headerlink" title="配置SSH"></a>配置SSH</h2><p>&emsp;&emsp;上传文件需要配置ssh key，不然无法上传。<br>&emsp;&emsp;首先先检查一下本地是否已经存在ssh key,在Git Bash输入以下指令（任意位置点击鼠标右键），检查是否已经存在了SSH keys。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -al ~/.ssh</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;如果不存在就没有关系，如果存在的话，直接删除.ssh文件夹里面所有文件： </p><p><img src="http://pgnfycdbr.bkt.clouddn.com/static/images/git+githubpage_sshcreate.png" alt="ssh.create"></p><p>&emsp;&emsp;设置name和emai</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"&lt;your name&gt;"</span></span><br><span class="line">git config --global user.email <span class="string">"&lt;your email&gt;"</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;需要注意的是这里的name是随意的，邮箱是你的联系邮箱，与github上的邮箱没有什么联系（不过我都是同一个邮箱）。</p><p><b>生成ssh 密钥</b></p><p>&emsp;&emsp;输入以下指令（邮箱就是你注册Github时候的邮箱）后，回车：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"XXXXX@qq.com"</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;一路按回车键即可，如果设置了密码请记住。<br>&emsp;&emsp;这一步在~/.ssh/下生成了两个文件id_rsa 和 id_rsa.pub</p><p><b>获取Key</b></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>然后拷贝key</p><p>&emsp;&emsp;在Github上添加SSH密钥</p><p>&emsp;&emsp;在<b><a href="https://github.com/settings/keys" target="_blank" rel="noopener">https://github.com/settings/keys</a>下 add new ssh key</b></p><p><img src="http://pgnfycdbr.bkt.clouddn.com/static/images/git+githubpage_sshconfig.png" alt="ssh"></p><p>&emsp;&emsp;然后title随便取个名字，key 就是上面我们拷贝的内容，<br>&emsp;&emsp;好了，最后我们测试一下看是否配置成功。</p><p>输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh git@github.com</span><br></pre></td></tr></table></figure><p>成功的话会显示以下的大致内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host <span class="string">'github.com (192.30.252.128)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added '</span>github.com,192.30.252.128<span class="string">' (RSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Hi git-xuhao! You'</span>ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class="line">Connection to github.com closed.</span><br></pre></td></tr></table></figure><p>推送Hexo到github</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><h2 id="其他的配置"><a href="#其他的配置" class="headerlink" title="其他的配置"></a>其他的配置</h2><p>&emsp;&emsp;更加详细的配置请查看 <a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">next使用手册</a></p><p>&emsp;&emsp;使用七牛云图床，参考 使用七牛为Hexo存储图片 和 Hexo七牛同步插件</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架，可托管于github pages，可免去维护服务器的麻烦，博主们可更专注于内容的创作。&lt;br&gt;
    
    </summary>
    
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
